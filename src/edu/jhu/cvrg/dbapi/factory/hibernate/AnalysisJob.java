package edu.jhu.cvrg.dbapi.factory.hibernate;

// Generated Dec 7, 2013 2:31:41 PM by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Analysisjob generated by hbm2java
 */
@Entity
@Table(name = "analysisjob", schema = "public")
public class AnalysisJob implements java.io.Serializable {

	private static final long serialVersionUID = 2614195463682426340L;
	
	private Long analysisJobId;
	private DocumentRecord documentRecord;
	private long documentRecordId;
	private int fileCount;
	private int parameterCount;
	private String serviceName;
	private String serviceUrl;
	private String serviceMethod;
	private Date dateOfAnalysis;
	private long userId;
	private List<FileInfo> filesInfo = new ArrayList<FileInfo>(0);

	public AnalysisJob() {
	}

	public AnalysisJob(Long analysisjobid, long documentrecordid,
			int filecount, int parametercount, String serviceurl,
			String servicename, String servicemethod, Date dateOfAnalysis, long userId) {
		this.analysisJobId = analysisjobid;
		this.documentRecordId = documentrecordid;
		this.fileCount = filecount;
		this.parameterCount = parametercount;
		this.serviceUrl = serviceurl;
		this.serviceName = servicename;
		this.serviceMethod = servicemethod;
		this.dateOfAnalysis = dateOfAnalysis;
		this.userId = userId;
	}

	@Id
	@SequenceGenerator(name="analyzejob_sequence",sequenceName="analyzejob_sequence", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="analyzejob_sequence")
	@Column(name = "analysisjobid", unique = true, nullable = false)
	public Long getAnalysisJobId() {
		return this.analysisJobId;
	}

	public void setAnalysisJobId(Long analysisjobid) {
		this.analysisJobId = analysisjobid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "documentrecordid", nullable = false, insertable = false, updatable = false)
	public DocumentRecord getDocumentRecord() {
		return this.documentRecord;
	}

	public void setDocumentRecord(DocumentRecord documentrecord) {
		this.documentRecord = documentrecord;
	}

	@Column(name = "filecount", nullable = false)
	public int getFileCount() {
		return this.fileCount;
	}

	public void setFileCount(int filecount) {
		this.fileCount = filecount;
	}

	@Column(name = "parametercount", nullable = false)
	public int getParameterCount() {
		return this.parameterCount;
	}

	public void setParameterCount(int parametercount) {
		this.parameterCount = parametercount;
	}

	@Column(name = "serviceurl", nullable = false, length = 75)
	public String getServiceUrl() {
		return this.serviceUrl;
	}

	public void setServiceUrl(String serviceurl) {
		this.serviceUrl = serviceurl;
	}

	@Column(name = "servicename", nullable = false, length = 50)
	public String getServiceName() {
		return this.serviceName;
	}

	public void setServiceName(String servicename) {
		this.serviceName = servicename;
	}

	@Column(name = "servicemethod", nullable = false, length = 50)
	public String getServiceMethod() {
		return this.serviceMethod;
	}

	public void setServiceMethod(String servicemethod) {
		this.serviceMethod = servicemethod;
	}

	@Column(name = "documentrecordid", nullable = false)
	public long getDocumentRecordId() {
		return documentRecordId;
	}

	public void setDocumentRecordId(long documentrecordid) {
		this.documentRecordId = documentrecordid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateofanalysis", length = 29, nullable = false)
	public Date getDateOfAnalysis() {
		return dateOfAnalysis;
	}

	public void setDateOfAnalysis(Date dateOfAnalysis) {
		this.dateOfAnalysis = dateOfAnalysis;
	}

	@Column(name = "userid", nullable = false)
	public long getUserId() {
		return userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "analysisJob")
	public List<FileInfo> getFilesInfo() {
		return this.filesInfo;
	}

	public void setFilesInfo(List<FileInfo> filesinfo) {
		this.filesInfo = filesinfo;
	}
}
