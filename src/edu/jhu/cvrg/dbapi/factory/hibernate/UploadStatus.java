package edu.jhu.cvrg.dbapi.factory.hibernate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * Uploadstatus generated by hbm2java
 */
@Entity
@Table(name = "uploadstatus", schema = "public")
public class UploadStatus implements java.io.Serializable {

	private static final long serialVersionUID = -7924573640720178670L;
	
	private DocumentRecord documentRecord;
	private Long documentRecordId;
	private Long annotationTime;
	private Long transferReadTime;
	private Long validationTime;
	private Long writeTime;
	private Boolean status;
	private String message; 

	public UploadStatus() {
	}

	public UploadStatus(Long documentrecordid, Long annotationtime,Long transferreadtime, Long validationtime, Long writetime, Boolean status, String message) {
		super();
		this.documentRecordId = documentrecordid;
		this.annotationTime = annotationtime;
		this.transferReadTime = transferreadtime;
		this.validationTime = validationtime;
		this.writeTime = writetime;
		this.status = status;
		this.message = message;
	}

	@Id
	@Column(name = "documentrecordid", unique = true, nullable = false)
	public Long getDocumentRecordId() {
		return documentRecordId;
	}
	
	@Column(name = "annotationtime")
	public Long getAnnotationTime() {
		return annotationTime;
	}

	@Column(name = "transferreadtime")
	public Long getTransferReadTime() {
		return transferReadTime;
	}

	@Column(name = "validationtime")
	public Long getValidationTime() {
		return validationTime;
	}

	@Column(name = "writetime")
	public Long getWriteTime() {
		return writeTime;
	}
	
	@Column(name = "status")
	public Boolean getStatus() {
		return status;
	}

	@Column(name = "message", length = 300)
	public String getMessage() {
		return message;
	}
	
	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public DocumentRecord getDocumentRecord() {
		return this.documentRecord;
	}

	public void setDocumentRecord(DocumentRecord documentrecord) {
		this.documentRecord = documentrecord;
	}
	public void setDocumentRecordId(Long documentrecordid) {
		this.documentRecordId = documentrecordid;
	}
	public void setAnnotationTime(Long annotationtime) {
		this.annotationTime = annotationtime;
	}
	public void setTransferReadTime(Long transferreadtime) {
		this.transferReadTime = transferreadtime;
	}
	public void setValidationTime(Long validationtime) {
		this.validationTime = validationtime;
	}
	public void setWriteTime(Long writetime) {
		this.writeTime = writetime;
	}
	public void setStatus(Boolean status) {
		this.status = status;
	}
	public void setMessage(String message) {
		this.message = message;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ ((documentRecordId == null) ? 0 : documentRecordId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UploadStatus other = (UploadStatus) obj;
		if (documentRecordId == null) {
			if (other.documentRecordId != null)
				return false;
		} else if (!documentRecordId.equals(other.documentRecordId))
			return false;
		return true;
	}

}
